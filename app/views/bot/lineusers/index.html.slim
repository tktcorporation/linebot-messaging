#app
  - @status_array = (@status_array + [["未選択", nil]])
  .container
    = link_to "ステータス管理", bot_statuses_path, class: "button"
    button.button v-on:click="toggleSearch" 検索
    .box.search-box v-show="search_show"
      = form_for LineuserSearch.new(), url: search_bot_custom_message_index_path(params[:bot_id]), method: :get, class: "form" do |f|
        .label 名前
        = f.search_field :name, :placeholder => "名前"
        .label convert_time
        = f.search_field :convert_time_from, :placeholder => "0000-00-00"
        span 〜
        = f.search_field :convert_time_to, :placeholder => "0000-00-00"
        .label session_time
        = f.search_field :session_time_from, :placeholder => "0000-00-00"
        span 〜
        = f.search_field :session_time_to, :placeholder => "0000-00-00"
        .label last message
        = f.search_field :messages_created_at_from, :placeholder => "0000-00-00"
        span 〜
        = f.search_field :messages_created_at_to, :placeholder => "0000-00-00"
        .label 最高取得件数
        = f.number_field :limit

        = submit_tag "検索"

    table.table.is-fullwidth
      thead
        tr style="white-space: nowrap;"
          th
            span ユーザー名
          th
            span ステータス
          - @quick_reply_list.each do |quick_reply|
            th
              = quick_reply.name
      tbody
        - @lineusers.each do |lineuser|
          tr
            td
              = link_to lineuser.name, bot_chat_path(params[:bot_id], lineuser.id)
            td
              - if lineuser.converted_lineuser.present?
                = form_with model: lineuser.lineuser_status.present? ? lineuser.lineuser_status : lineuser.build_lineuser_status, url: lineuser_lineuser_statuses_path(lineuser_id: lineuser.id), data: { parsley_validate: "" }, html: { name: "status_form_#{lineuser.id}", class: "form" } do |f|
                  .field
                    p.control
                      .select
                        = f.select :status_id, @status_array, {:prompt => "未選択"}, {"v-on:change"=>"submitStatus(#{lineuser.id})"}
                - if lineuser.lastmessage&.to_bot == true
                  .label 未返信
              - else
                /label.label 未CV
                p = lineuser.quick_reply&.name

            - @quick_reply_list.each do |quick_reply|
              td
                - if index = lineuser.response_data.pluck(:quick_reply_id).index(quick_reply.id)
                  = lineuser.response_data[index].response_text
                - else
                  span NULL

= javascript_pack_tag 'bot_response_data_index'